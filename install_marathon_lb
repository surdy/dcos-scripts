#!/usr/bin/env bash

# Install MLB on a strict security DC/OS Cluster

# Create a key Pair
dcos security org service-accounts keypair mlb-private-key.pem mlb-public-key.pem

# Create service account 
dcos security org service-accounts create -p mlb-public-key.pem -d "Marathon-LB service account" mlb-principal

# Create service account secret
dcos security secrets create-sa-secret --strict mlb-private-key.pem mlb-principal mlb-secret

# Remove private key from disk
rm -rf mlb-private-key.pem

# Obtain DC/OS certificate
curl -k -v $(dcos config show core.dcos_url)/ca/dcos-ca.crt -o dcos-ca.crt

# Add permissions to service account
curl -X PUT --cacert dcos-ca.crt -H "Authorization: token=$(dcos config show core.dcos_acs_token)" $(dcos config show core.dcos_url)/acs/api/v1/acls/dcos:service:marathon:marathon:services:%252F -d '{"description":"Allows access to any service launched by the native Marathon instance"}' -H 'Content-Type: application/json'
curl -X PUT --cacert dcos-ca.crt -H "Authorization: token=$(dcos config show core.dcos_acs_token)" $(dcos config show core.dcos_url)/acs/api/v1/acls/dcos:service:marathon:marathon:admin:events -d '{"description":"Allows access to Marathon events"}' -H 'Content-Type: application/json'
curl -X PUT --cacert dcos-ca.crt -H "Authorization: token=$(dcos config show core.dcos_acs_token)" $(dcos config show core.dcos_url)/acs/api/v1/acls/dcos:service:marathon:marathon:services:%252F/users/mlb-principal/read
curl -X PUT --cacert dcos-ca.crt -H "Authorization: token=$(dcos config show core.dcos_acs_token)" $(dcos config show core.dcos_url)/acs/api/v1/acls/dcos:service:marathon:marathon:admin:events/users/mlb-principal/read

# Create config.json for marathon-lb
tee mlb-config.json <<-'EOF'
{
    "marathon-lb": {
        "secret_name": "mlb-secret",
        "marathon-uri": "https://marathon.mesos:8443"
    }
}
EOF
 
# Install marathon-lb
dcos package install --yes --options=mlb-config.json marathon-lb
